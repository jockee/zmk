
/*
 * Generated ZMK Macros
 * Automatically included by glove80.keymap
 * DO NOT EDIT MANUALLY - Run generate_zmk_config.py instead
 */

/ {
    macros {

        m_to: m_to {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TO"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp O
                &macro_tap &kp SPACE>;
        };

        m_i: m_i {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_I"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp SPACE>;
        };

        m_a: m_a {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_A"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp SPACE>;
        };

        m_the: m_the {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_THE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp H
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_is: m_is {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_and: m_and {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AND"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp N
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_it: m_it {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_chord: m_chord {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CHORD"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp H
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_my: m_my {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_MY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_be: m_be {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_BE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp B
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_w: m_w {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_W"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp SPACE>;
        };

        m_of: m_of {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OF"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp F
                &macro_tap &kp SPACE>;
        };

        m_n: m_n {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_N"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_e: m_e {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_E"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_with: m_with {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WITH"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp I
                &macro_tap &kp T
                &macro_tap &kp H
                &macro_tap &kp SPACE>;
        };

        m_in: m_in {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IN"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_or: m_or {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_t: m_t {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_T"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_if: m_if {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IF"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp F
                &macro_tap &kp SPACE>;
        };

        m_not: m_not {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NOT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp O
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_would: m_would {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WOULD"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp O
                &macro_tap &kp U
                &macro_tap &kp L
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_we: m_we {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_are: m_are {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ARE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp R
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_most: m_most {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_MOST"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp O
                &macro_tap &kp S
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_y: m_y {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_Y"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_now: m_now {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NOW"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp O
                &macro_tap &kp W
                &macro_tap &kp SPACE>;
        };

        m_want: m_want {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WANT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp A
                &macro_tap &kp N
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_for: m_for {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FOR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_this: m_this {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_THIS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp H
                &macro_tap &kp I
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_how: m_how {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_HOW"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp O
                &macro_tap &kp W
                &macro_tap &kp SPACE>;
        };

        m_as: m_as {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_by: m_by {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_BY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp B
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_py: m_py {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_PY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp P
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_s: m_s {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_S"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_what: m_what {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WHAT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp H
                &macro_tap &kp A
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_have: m_have {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_HAVE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp A
                &macro_tap &kp V
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_do: m_do {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_DO"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp D
                &macro_tap &kp O
                &macro_tap &kp SPACE>;
        };

        m_keys: m_keys {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_KEYS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp K
                &macro_tap &kp E
                &macro_tap &kp Y
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_per: m_per {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_PER"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp P
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_can: m_can {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CAN"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp A
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_o: m_o {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_O"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp SPACE>;
        };

        m_me: m_me {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ME"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_more: m_more {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_MORE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_ls: m_ls {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_ignore: m_ignore {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IGNORE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp G
                &macro_tap &kp N
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_some: m_some {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SOME"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp O
                &macro_tap &kp M
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_one: m_one {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ONE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp N
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_at: m_at {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_an: m_an {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AN"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_ev: m_ev {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_EV"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp V
                &macro_tap &kp SPACE>;
        };

        m_other: m_other {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OTHER"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp T
                &macro_tap &kp H
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_find: m_find {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FIND"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp I
                &macro_tap &kp N
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_on: m_on {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ON"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_d: m_d {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_D"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_from: m_from {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FROM"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp R
                &macro_tap &kp O
                &macro_tap &kp M
                &macro_tap &kp SPACE>;
        };

        m_f: m_f {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_F"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp SPACE>;
        };

        m_dh: m_dh {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_DH"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp D
                &macro_tap &kp H
                &macro_tap &kp SPACE>;
        };

        m_same: m_same {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SAME"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp A
                &macro_tap &kp M
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_finger: m_finger {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FINGER"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp I
                &macro_tap &kp N
                &macro_tap &kp G
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_cant: m_cant {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CANT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp A
                &macro_tap &kp N
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_p: m_p {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_P"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp P
                &macro_tap &kp SPACE>;
        };

        m_you: m_you {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_YOU"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp Y
                &macro_tap &kp O
                &macro_tap &kp U
                &macro_tap &kp SPACE>;
        };

        m_file: m_file {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FILE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp I
                &macro_tap &kp L
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_v: m_v {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_V"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp V
                &macro_tap &kp SPACE>;
        };

        m_does: m_does {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_DOES"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp D
                &macro_tap &kp O
                &macro_tap &kp E
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_h: m_h {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_H"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp SPACE>;
        };

        m_don: m_don {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_DON"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp D
                &macro_tap &kp O
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_into: m_into {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_INTO"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp N
                &macro_tap &kp T
                &macro_tap &kp O
                &macro_tap &kp SPACE>;
        };

        m_just: m_just {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_JUST"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp J
                &macro_tap &kp U
                &macro_tap &kp S
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_wq: m_wq {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WQ"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp Q
                &macro_tap &kp SPACE>;
        };

        m_q: m_q {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_Q"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp Q
                &macro_tap &kp SPACE>;
        };

        m_ed: m_ed {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ED"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_th: m_th {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TH"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp H
                &macro_tap &kp SPACE>;
        };

        m_why: m_why {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WHY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp H
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_list: m_list {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LIST"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp I
                &macro_tap &kp S
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_count: m_count {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_COUNT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp O
                &macro_tap &kp U
                &macro_tap &kp N
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_du: m_du {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_DU"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp D
                &macro_tap &kp U
                &macro_tap &kp SPACE>;
        };

        m_flow: m_flow {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FLOW"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp L
                &macro_tap &kp O
                &macro_tap &kp W
                &macro_tap &kp SPACE>;
        };

        m_ore: m_ore {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ORE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_ig: m_ig {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IG"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp G
                &macro_tap &kp SPACE>;
        };

        m_ign: m_ign {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IGN"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp G
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_c: m_c {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_C"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp SPACE>;
        };

        m_failed: m_failed {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FAILED"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp A
                &macro_tap &kp I
                &macro_tap &kp L
                &macro_tap &kp E
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_after: m_after {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AFTER"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp F
                &macro_tap &kp T
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_key: m_key {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_KEY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp K
                &macro_tap &kp E
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_they: m_they {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_THEY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp H
                &macro_tap &kp E
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_wi: m_wi {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WI"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp I
                &macro_tap &kp SPACE>;
        };

        m_g: m_g {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_G"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp G
                &macro_tap &kp SPACE>;
        };

        m_j: m_j {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_J"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp J
                &macro_tap &kp SPACE>;
        };

        m_m: m_m {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_M"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp SPACE>;
        };

        m_star: m_star {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_STAR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp T
                &macro_tap &kp A
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_goal: m_goal {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_GOAL"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp G
                &macro_tap &kp O
                &macro_tap &kp A
                &macro_tap &kp L
                &macro_tap &kp SPACE>;
        };

        m_lead: m_lead {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LEAD"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp E
                &macro_tap &kp A
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_its: m_its {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ITS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp T
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_skip: m_skip {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SKIP"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp K
                &macro_tap &kp I
                &macro_tap &kp P
                &macro_tap &kp SPACE>;
        };

        m_their: m_their {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_THEIR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp H
                &macro_tap &kp E
                &macro_tap &kp I
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_own: m_own {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OWN"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp W
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_those: m_those {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_THOSE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp H
                &macro_tap &kp O
                &macro_tap &kp S
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_two: m_two {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TWO"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp W
                &macro_tap &kp O
                &macro_tap &kp SPACE>;
        };

        m_any: m_any {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ANY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp N
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_master: m_master {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_MASTER"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp A
                &macro_tap &kp S
                &macro_tap &kp T
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_forge: m_forge {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FORGE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp G
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_out: m_out {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OUT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp U
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_cor: m_cor {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_COR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_could: m_could {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_COULD"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp O
                &macro_tap &kp U
                &macro_tap &kp L
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_had: m_had {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_HAD"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp A
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_read: m_read {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_READ"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp R
                &macro_tap &kp E
                &macro_tap &kp A
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_go: m_go {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_GO"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp G
                &macro_tap &kp O
                &macro_tap &kp SPACE>;
        };

        m_take: m_take {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TAKE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp A
                &macro_tap &kp K
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_saw: m_saw {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SAW"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp A
                &macro_tap &kp W
                &macro_tap &kp SPACE>;
        };

        m_isudo: m_isudo {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ISUDO"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp S
                &macro_tap &kp U
                &macro_tap &kp D
                &macro_tap &kp O
                &macro_tap &kp SPACE>;
        };

        m_arst: m_arst {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ARST"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp R
                &macro_tap &kp S
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_once: m_once {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ONCE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp N
                &macro_tap &kp C
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_ac: m_ac {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AC"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp C
                &macro_tap &kp SPACE>;
        };

        m_cd: m_cd {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CD"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_nit: m_nit {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NIT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp I
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_ct: m_ct {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_least: m_least {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LEAST"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp E
                &macro_tap &kp A
                &macro_tap &kp S
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_ideal: m_ideal {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IDEAL"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp D
                &macro_tap &kp E
                &macro_tap &kp A
                &macro_tap &kp L
                &macro_tap &kp SPACE>;
        };

        m_lost: m_lost {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LOST"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp O
                &macro_tap &kp S
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_place: m_place {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_PLACE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp P
                &macro_tap &kp L
                &macro_tap &kp A
                &macro_tap &kp C
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_te: m_te {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_your: m_your {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_YOUR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp Y
                &macro_tap &kp O
                &macro_tap &kp U
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_figer: m_figer {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FIGER"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp I
                &macro_tap &kp G
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_nger: m_nger {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NGER"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp G
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_fix: m_fix {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FIX"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp I
                &macro_tap &kp X
                &macro_tap &kp SPACE>;
        };

        m_later: m_later {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LATER"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp A
                &macro_tap &kp T
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_u: m_u {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_U"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp U
                &macro_tap &kp SPACE>;
        };

        m_ji: m_ji {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_JI"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp J
                &macro_tap &kp I
                &macro_tap &kp SPACE>;
        };

        m_k: m_k {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_K"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp K
                &macro_tap &kp SPACE>;
        };

        m_x: m_x {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_X"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp X
                &macro_tap &kp SPACE>;
        };

        m_haps: m_haps {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_HAPS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp A
                &macro_tap &kp P
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_js: m_js {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_JS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp J
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_muy: m_muy {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_MUY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp U
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_whi: m_whi {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WHI"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp H
                &macro_tap &kp I
                &macro_tap &kp SPACE>;
        };

        m_ch: m_ch {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CH"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp H
                &macro_tap &kp SPACE>;
        };

        m_won: m_won {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WON"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp O
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_os: m_os {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_eac: m_eac {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_EAC"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp A
                &macro_tap &kp C
                &macro_tap &kp SPACE>;
        };

        m_upon: m_upon {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_UPON"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp U
                &macro_tap &kp P
                &macro_tap &kp O
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_also: m_also {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ALSO"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp L
                &macro_tap &kp S
                &macro_tap &kp O
                &macro_tap &kp SPACE>;
        };

        m_fore: m_fore {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FORE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_show: m_show {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SHOW"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp H
                &macro_tap &kp O
                &macro_tap &kp W
                &macro_tap &kp SPACE>;
        };

        m_sho: m_sho {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SHO"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp H
                &macro_tap &kp O
                &macro_tap &kp SPACE>;
        };

        m_ly: m_ly {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_se: m_se {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_ive: m_ive {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IVE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp V
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_few: m_few {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FEW"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp E
                &macro_tap &kp W
                &macro_tap &kp SPACE>;
        };

        m_nt: m_nt {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_end: m_end {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_END"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp N
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_li: m_li {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LI"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp I
                &macro_tap &kp SPACE>;
        };

        m_ion: m_ion {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ION"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp O
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_woul: m_woul {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WOUL"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp O
                &macro_tap &kp U
                &macro_tap &kp L
                &macro_tap &kp SPACE>;
        };

        m_come: m_come {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_COME"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp O
                &macro_tap &kp M
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_hat: m_hat {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_HAT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp A
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_ways: m_ways {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WAYS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp A
                &macro_tap &kp Y
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_ablr: m_ablr {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ABLR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp B
                &macro_tap &kp L
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_ideas: m_ideas {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IDEAS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp D
                &macro_tap &kp E
                &macro_tap &kp A
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_uand: m_uand {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_UAND"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp U
                &macro_tap &kp A
                &macro_tap &kp N
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_zm: m_zm {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ZM"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp Z
                &macro_tap &kp M
                &macro_tap &kp SPACE>;
        };

        m_mi: m_mi {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_MI"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp I
                &macro_tap &kp SPACE>;
        };

        m_wan: m_wan {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WAN"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp A
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_bea: m_bea {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_BEA"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp B
                &macro_tap &kp E
                &macro_tap &kp A
                &macro_tap &kp SPACE>;
        };

        m_able: m_able {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ABLE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp B
                &macro_tap &kp L
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_gsome: m_gsome {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_GSOME"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp G
                &macro_tap &kp S
                &macro_tap &kp O
                &macro_tap &kp M
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_b: m_b {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_B"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp B
                &macro_tap &kp SPACE>;
        };

        m_nice: m_nice {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NICE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp I
                &macro_tap &kp C
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_format: m_format {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FORMAT"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp M
                &macro_tap &kp A
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_hae: m_hae {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_HAE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp A
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_rd: m_rd {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_RD"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp R
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_exactly: m_exactly {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_EXACTLY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp X
                &macro_tap &kp A
                &macro_tap &kp C
                &macro_tap &kp T
                &macro_tap &kp L
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_ing: m_ing {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ING"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp N
                &macro_tap &kp G
                &macro_tap &kp SPACE>;
        };

        m_others: m_others {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OTHERS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp T
                &macro_tap &kp H
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_woukd: m_woukd {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WOUKD"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp O
                &macro_tap &kp U
                &macro_tap &kp K
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_ld: m_ld {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LD"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp D
                &macro_tap &kp SPACE>;
        };

        m_doesn: m_doesn {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_DOESN"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp D
                &macro_tap &kp O
                &macro_tap &kp E
                &macro_tap &kp S
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_favor: m_favor {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FAVOR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp A
                &macro_tap &kp V
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_very: m_very {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_VERY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp V
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_ge: m_ge {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_GE"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp G
                &macro_tap &kp E
                &macro_tap &kp SPACE>;
        };

        m_open: m_open {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OPEN"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp P
                &macro_tap &kp E
                &macro_tap &kp N
                &macro_tap &kp SPACE>;
        };

        m_wel: m_wel {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WEL"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp E
                &macro_tap &kp L
                &macro_tap &kp SPACE>;
        };

        m_takes: m_takes {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TAKES"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp A
                &macro_tap &kp K
                &macro_tap &kp E
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_args: m_args {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ARGS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp R
                &macro_tap &kp G
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_over: m_over {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OVER"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp V
                &macro_tap &kp E
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_low: m_low {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LOW"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp O
                &macro_tap &kp W
                &macro_tap &kp SPACE>;
        };

        m_hest: m_hest {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_HEST"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp E
                &macro_tap &kp S
                &macro_tap &kp T
                &macro_tap &kp SPACE>;
        };

        m_chr: m_chr {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CHR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp H
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_chor: m_chor {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CHOR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp H
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_map: m_map {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_MAP"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp A
                &macro_tap &kp P
                &macro_tap &kp SPACE>;
        };

        m_early: m_early {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_EARLY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp A
                &macro_tap &kp R
                &macro_tap &kp L
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_ngra: m_ngra {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NGRA"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp G
                &macro_tap &kp R
                &macro_tap &kp A
                &macro_tap &kp SPACE>;
        };

        m_may: m_may {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_MAY"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp A
                &macro_tap &kp Y
                &macro_tap &kp SPACE>;
        };

        m_ocr: m_ocr {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OCR"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp C
                &macro_tap &kp R
                &macro_tap &kp SPACE>;
        };

        m_reads: m_reads {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_READS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp R
                &macro_tap &kp E
                &macro_tap &kp A
                &macro_tap &kp D
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_pus: m_pus {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_PUS"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp P
                &macro_tap &kp U
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_us: m_us {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_US"; // Use uppercase label for convention
            #binding-cells = <0>;
            bindings = <&macro_tap &kp U
                &macro_tap &kp S
                &macro_tap &kp SPACE>;
        };

        m_wo: m_wo {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WO";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp O>;
        };

        m_th_1: m_th_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TH_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp H>;
        };

        m_st: m_st {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ST";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp T>;
        };

        m_rds: m_rds {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_RDS";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp R
                &macro_tap &kp D
                &macro_tap &kp S>;
        };

        m_cho: m_cho {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CHO";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp H
                &macro_tap &kp O>;
        };

        m_ch_1: m_ch_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CH_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp H>;
        };

        m_rd_1: m_rd_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_RD_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp R
                &macro_tap &kp D>;
        };

        m_re: m_re {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_RE";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp R
                &macro_tap &kp E>;
        };

        m_uld: m_uld {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ULD";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp U
                &macro_tap &kp L
                &macro_tap &kp D>;
        };

        m_ord: m_ord {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ORD";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp D>;
        };

        m_nt_1: m_nt_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NT_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp T>;
        };

        m_wh: m_wh {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WH";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp H>;
        };

        m_ld_1: m_ld_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LD_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp D>;
        };

        m_at_1: m_at_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AT_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp T>;
        };

        m_ngr: m_ngr {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NGR";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp G
                &macro_tap &kp R>;
        };

        m_er: m_er {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ER";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp R>;
        };

        m_mo: m_mo {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_MO";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp O>;
        };

        m_wi_1: m_wi_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WI_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp I>;
        };

        m_ce: m_ce {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CE";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp E>;
        };

        m_wou: m_wou {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WOU";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp O
                &macro_tap &kp U>;
        };

        m_ams: m_ams {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AMS";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp M
                &macro_tap &kp S>;
        };

        m_is_1: m_is_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IS_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp S>;
        };

        m_the_1: m_the_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_THE_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp H
                &macro_tap &kp E>;
        };

        m_se_1: m_se_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SE_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp E>;
        };

        m_wa: m_wa {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WA";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp A>;
        };

        m_ng: m_ng {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NG";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp G>;
        };

        m_ve: m_ve {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_VE";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp V
                &macro_tap &kp E>;
        };

        m_al: m_al {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AL";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp L>;
        };

        m_sp: m_sp {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SP";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp P>;
        };

        m_ace: m_ace {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ACE";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp C
                &macro_tap &kp E>;
        };

        m_me_1: m_me_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ME_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp E>;
        };

        m_ke: m_ke {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_KE";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp K
                &macro_tap &kp E>;
        };

        m_do_1: m_do_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_DO_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp D
                &macro_tap &kp O>;
        };

        m_fe: m_fe {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FE";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp E>;
        };

        m_spa: m_spa {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SPA";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp P
                &macro_tap &kp A>;
        };

        m_ter: m_ter {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TER";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp E
                &macro_tap &kp R>;
        };

        m_fi: m_fi {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FI";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp I>;
        };

        m_go_1: m_go_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_GO_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp G
                &macro_tap &kp O>;
        };

        m_sho_1: m_sho_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SHO_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp H
                &macro_tap &kp O>;
        };

        m_ma: m_ma {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_MA";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp M
                &macro_tap &kp A>;
        };

        m_so: m_so {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SO";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp O>;
        };

        m_ha: m_ha {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_HA";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp A>;
        };

        m_whi_1: m_whi_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WHI_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp H
                &macro_tap &kp I>;
        };

        m_ich: m_ich {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ICH";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp C
                &macro_tap &kp H>;
        };

        m_ign_1: m_ign_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IGN_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp G
                &macro_tap &kp N>;
        };

        m_ore_1: m_ore_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ORE_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp E>;
        };

        m_en: m_en {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_EN";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp N>;
        };

        m_to_1: m_to_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TO_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp O>;
        };

        m_ys: m_ys {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_YS";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp Y
                &macro_tap &kp S>;
        };

        m_her: m_her {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_HER";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp E
                &macro_tap &kp R>;
        };

        m_nd: m_nd {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ND";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp D>;
        };

        m_on_1: m_on_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ON_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp N>;
        };

        m_es: m_es {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ES";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp S>;
        };

        m_ig_1: m_ig_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IG_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp G>;
        };

        m_an_1: m_an_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AN_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp N>;
        };

        m_co: m_co {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CO";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp O>;
        };

        m_fo: m_fo {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FO";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp O>;
        };

        m_ab: m_ab {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AB";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp B>;
        };

        m_od: m_od {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OD";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp D>;
        };

        m_cou: m_cou {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_COU";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp O
                &macro_tap &kp U>;
        };

        m_le: m_le {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LE";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp E>;
        };

        m_ne: m_ne {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_NE";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N
                &macro_tap &kp E>;
        };

        m_ca: m_ca {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_CA";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp A>;
        };

        m_ht: m_ht {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_HT";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H
                &macro_tap &kp T>;
        };

        m_ar: m_ar {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AR";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp R>;
        };

        m_oth: m_oth {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OTH";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp T
                &macro_tap &kp H>;
        };

        m_ing_1: m_ing_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ING_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp N
                &macro_tap &kp G>;
        };

        m_am: m_am {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AM";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp M>;
        };

        m_be_1: m_be_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_BE_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp B
                &macro_tap &kp E>;
        };

        m_for_1: m_for_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FOR_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp O
                &macro_tap &kp R>;
        };

        m_ta: m_ta {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TA";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp A>;
        };

        m_rt: m_rt {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_RT";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp R
                &macro_tap &kp T>;
        };

        m_cor_1: m_cor_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_COR_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp C
                &macro_tap &kp O
                &macro_tap &kp R>;
        };

        m_fr: m_fr {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FR";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp R>;
        };

        m_ad: m_ad {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_AD";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp D>;
        };

        m_ram: m_ram {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_RAM";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp R
                &macro_tap &kp A
                &macro_tap &kp M>;
        };

        m_pus_1: m_pus_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_PUS_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp P
                &macro_tap &kp U
                &macro_tap &kp S>;
        };

        m_low_1: m_low_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LOW_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp O
                &macro_tap &kp W>;
        };

        m_ly_1: m_ly_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LY_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp Y>;
        };

        m_in_1: m_in_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_IN_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp I
                &macro_tap &kp N>;
        };

        m_li_1: m_li_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LI_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp I>;
        };

        m_ow: m_ow {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OW";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp W>;
        };

        m_fa: m_fa {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FA";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp A>;
        };

        m_ed_1: m_ed_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ED_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp E
                &macro_tap &kp D>;
        };

        m_ot: m_ot {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OT";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp T>;
        };

        m_ger: m_ger {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_GER";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp G
                &macro_tap &kp E
                &macro_tap &kp R>;
        };

        m_art: m_art {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_ART";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp A
                &macro_tap &kp R
                &macro_tap &kp T>;
        };

        m_fig: m_fig {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FIG";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp I
                &macro_tap &kp G>;
        };

        m_sou: m_sou {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SOU";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp O
                &macro_tap &kp U>;
        };

        m_tak: m_tak {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TAK";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp A
                &macro_tap &kp K>;
        };

        m_om: m_om {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OM";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp M>;
        };

        m_lo: m_lo {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_LO";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp L
                &macro_tap &kp O>;
        };

        m_or_1: m_or_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_OR_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp O
                &macro_tap &kp R>;
        };

        m_we_1: m_we_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_WE_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp W
                &macro_tap &kp E>;
        };

        m_te_1: m_te_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TE_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp E>;
        };

        m_us_1: m_us_1 {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_US_1";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp U
                &macro_tap &kp S>;
        };

        m_fin: m_fin {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_FIN";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F
                &macro_tap &kp I
                &macro_tap &kp N>;
        };

        m_sa: m_sa {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_SA";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S
                &macro_tap &kp A>;
        };

        m_pe: m_pe {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_PE";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp P
                &macro_tap &kp E>;
        };

        m_ty: m_ty {
            compatible = "zmk,behavior-macro";
            label = "MAC_M_TY";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp T
                &macro_tap &kp Y>;
        };

    }; // end of macros
}; // end of /
